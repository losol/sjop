@page
@model CheckoutModel
@{
    ViewData["Title"] = "Send bestilling";
}

<div class="py-5 text-center">
  <img class="d-block mx-auto mb-4" src="~/assets/images/kommunevapen-small.png" alt="" width="72" height="72">
  <h2>Bestilling</h2>
  <p class="lead">Kurt pakker og sender s√• snart du har fylt ut og sendt inn.</p>
</div>

<ul class="list-group mb-3" id="cart-list">
</ul>

<div class="row">
  <div class="col-md-8 order-md-1">
    <h4 class="mb-3">Navn og adresse</h4>
      <form class="needs-validation" id="order-form" novalidate>
          <div class="mb-3">
          <label for="name">Navn</label>
          <input type="text" class="form-control" id="name" name="name" placeholder="Kurt Teknisk" required>
          <div class="invalid-feedback">
              Du m&aring; oppgi navn.
          </div>
          </div>

          <div class="mb-3">
          <label for="email">E-post </label>
          <input type="email" class="form-control" id="email" name="email" placeholder="kurt@losvikkommune.no" required>
          <div class="invalid-feedback">
              Vi m&aring; ha eposten din.
          </div>
          </div>

          <div class="mb-3">
          <label for="address">Adresse</label>
          <input type="text" class="form-control" id="address" name="address" placeholder="Losnesmyra 42">
          <div class="invalid-feedback">
              Oppgi adresse.
          </div>
          </div>


          <div class="row">
              <div class="col-md-3 mb-3">
                  <label for="zip">Postnummer</label>
                  <input type="text" class="form-control" id="zip" name="zip" placeholder="8000" required>
                  <div class="invalid-feedback">
                  Zip code required.
                  </div>
              </div>
              <div class="col-md-9 mb-3">
                  <label for="city">Poststed</label>
                  <input type="text" class="form-control" id="city" name="city" placeholder="Losvika" required>
                  <div class="invalid-feedback">
                  Fyll ut poststed.
                  </div>
              </div>
          </div>
          <div class="mb-3">
          <label for="country">Land</label>
          <input type="text" class="form-control" id="country" name="country" placeholder="kurt@losvikkommune.no" value="Norge">
          </div>
          <hr class="mb-4">

          <h4 class="mb-3">Betaling</h4>

          <div class="d-block my-3">
            <div class="custom-control custom-radio">
                <input id="card" value="card" name="payment" type="radio" class="custom-control-input" checked>
                <label class="custom-control-label" for="card">Betal med kort</label>
            </div>
          </div>
          <hr class="mb-4">
          <button class="btn btn-primary btn-lg btn-block" type="submit">Betal</button>
    </form>
  </div>
</div>


@section Scripts {
  <script>

    // Fetch and populate products from Cart
    function createNode(element) {
        return document.createElement(element);
    }

    function append(parent, el) {
      return parent.appendChild(el);
    }

    const ul = document.getElementById('cart-list');
    const url = 'api/v1/cart'; 
      fetch(url)
      .then((resp) => resp.json())
      .then(function(data) {
        console.log(data);
        data.cartItems.map(function(cartItem) {
          let li = createNode('li'),
              productNameSpan = createNode('span')
              priceSpan = createNode('span');

          li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'lh-condensed');

          // Product name
          productNameSpan.innerHTML = `${cartItem.product.name}`;
          append(li, productNameSpan);

          // Price
          priceSpan.innerHTML = `kr ${cartItem.product.totalPrice.toFixed(2)}`;
          append(li, priceSpan);

          append(ul, li);
          });

        // Add shipping
        let shippingLi = createNode('li'),
            shippingText = createNode('span'),
            shippingCost = createNode('span');
        
        shippingLi.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'lh-condensed');
        shippingText.innerHTML = `Frakt`;
        shippingCost.innerHTML = `kr ${data.shippingCost.totalShippingCost}`;
        
        append(shippingLi, shippingText);
        append(shippingLi, shippingCost);
        append(ul, shippingLi);

        // Add total
        let totalLi = createNode('li'),
            totalText = createNode('span'),
            totalCost = createNode('span');
        
        totalLi.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'lh-condensed', 'font-weight-bold');
        totalText.innerHTML = `Totalt`;
        totalCost.innerHTML = `kr ${data.cartTotal.toFixed(2)}`;
        
        append(totalLi, totalText);
        append(totalLi, totalCost);
        append(ul, totalLi);
      
        })
      


      .catch(function(error) {
        console.log(error);
      }); 






    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function() {
      'use strict';
      window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();

    // Helper for serializing form to JSON 

    (function() {
      function toJSONString(form) {
        var obj = {};
        var elements = form.querySelectorAll("input, select, textarea");
        for (var i = 0; i < elements.length; ++i) {
          var element = elements[i];
          var name = element.name;
          var value = element.value;

          if (name) {
            obj[name] = value;
          }
        }

        return JSON.stringify(obj);
      }

      document.addEventListener("DOMContentLoaded", function() {
        var form = document.getElementById("order-form");
        // var output = document.getElementById("output");
        form.addEventListener(
          "submit",
          function(e) {
            e.preventDefault();
            var json = toJSONString(this);
            console.log( json );
          },
          false
        );
      });
    })();
  </script>
}